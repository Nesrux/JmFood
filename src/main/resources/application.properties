#login e senha do localhost, juntamente com o caminho do localhost
spring.datasource.url=jdbc:mysql://localhost/Jmfood?createDatabaseIfNotExist=true&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=marcos10

#jpa
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL57Dialect

#flyway
spring.flyway.locations=classpath:db/migration,classpath:db/imports

#server
server.compression.enabled=true

#hikari
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.idle-timeout=300000

#jackson
spring.jackson.deserialization.fail-on-unknown-properties=true
spring.jackson.deserialization.fail-on-ignored-properties=true

#mvc
spring.mvc.throw-exception-if-no-handler-found=true
spring.resources.add-mappings=false


#se for local, precisa criar uma pasta em c://user/dowload com o nome BANCO_DE_FOTOS
#ou mudar o .local.diretorio-fotos para uma pasta que você quer
jmfood.storage.tipo=local

#LOCAL									
#configuração para definir em que pasta o vão ser salva as fotos
jmfood.storage.local.diretorio-fotos=C:\\Users\\jucaj\\Downloads\\BANCO_DE_FOTOS

#AMAZON
jmfood.storage.s3.id-chave-acesso={AwsIdChaveAcesso}
jmfood.storage.s3.chave-acesso-secreta ={AwschaveAcessoSecreta}
jmfood.storage.s3.bucket={AwsBucket}
jmfood.storage.s3.regiao=us-east-1
jmfood.storage.s3.diretorio-fotos={AwsCatalogo}

#EMAIL
jmfood.email.remetente=naoresponderjmfood@gmail.com
jmfood.email.host=smtp.gmail.com
jmfood.email.port=587

#existem 3 opçoes aqui, mock, prod e sandbox
jmfood.email.impl=mock
jmfood.email.sandbox.destinatario=jmfoodmail@gmail.com
#jmfood.email.password={senha} Colocar a senha de 16 caracteres do gmail aqui

#freemarker
spring.freemarker.settings.locale=pt_BR

#logging.loggly.token=TOKEN loggly

#Security
spring.security.oauth2.resourceserver.jwt.public-key-location=classpath:keysStore/jmfoof-pkey.pem


#login login do user default
#spring.security.user.name=jmfood123
#password do user do default
#spring.security.user.password=123
#hash para esse login/senha am1mb29kMTIzOjEyMw==
#spring.security.oauth2.resourceserver.opaquetoken.introspection-uri=http://localhost:8081/oauth/check_token
#spring.security.oauth2.resourceserver.opaquetoken.client-id=checkToken
#spring.security.oauth2.resourceserver.opaquetoken.client-secret=token123


